#!/bin/bash
# 


if [[ $# -eq 0 ]]; then
    echo "Usage: "
    echo "    ./almacosmos_screen_run_in_parallel \"my_program_list.txt\" 15"
    echo "    ./almacosmos_screen_run_in_parallel \"my_program_list.txt\" 15 [start_number [end_number [step_number]]]"
    echo "    # The first input is a text file containing the list of commands you would like to run"
    echo "    # The second input is the number of simultaneous processes. Default is 10."
    echo "    # The third input is the sleep time per loop. Default is 30 seconds."
    echo ""
    echo "Example: "
    echo "    If we have a script \"test_program.sh\", and we want to run it multiple times with different inputs, "
    echo "    then we write down each command into a text file \"test_list_of_commands.txt\" with contents like: "
    echo "      \"test_program.sh aaa\""
    echo "      \"test_program.sh bbb\""
    echo "      \"test_program.sh ccc\""
    echo "    Then we run: "
    echo "      almacosmos_screen_run_in_parallel \"test_list_of_commands.txt\" 3 0.5"
    echo "    Then the 3 commands will be executed almost simultaneously, with a delay of 0.5 seconds per command."
    echo "    These commands will be executed at the same directory as the \"my_program_list.txt\" file."
    echo ""
    exit
fi

# read in my_program_list
my_program_dir=$(bash -c "cd $(dirname $1); pwd")
IFS=$'\n' read -d '' -r -a my_program_list < "$1"

# read in number of simultaneous processes
limit_simultaneous_processes=10
if [[ $# -ge 2 ]]; then
    limit_simultaneous_processes=$2
fi

# read in sleep time per loop
sleep_time_per_loop=30
if [[ $# -ge 3 ]]; then
    sleep_time_per_loop=$3
fi

# read in start number
start_number=1
if [[ $# -ge 4 ]]; then
    start_number=$4
fi
istart=$start_number

# read in end number
end_number=${#my_program_list[@]}
if [[ $# -ge 5 ]]; then
    end_number=$5
fi
iend=$end_number

# read in step number
step_number=1
if [[ $# -ge 6 ]]; then
    step_number=$6
fi
istep=$step_number

# random uid
RandomUid=$RANDOM

# loop each line of my_program_list
for (( i=$istart; i<=$iend; i+=$istep )); do
    RunCommand="${my_program_list[$((i-1))]}"
    echo "Current computer \"$(hostname)\""
    echo "Current directory \"$(pwd)\""
    echo -ne "Counting screen task "$(screen -ls | grep "almacosmos_${RandomUid}_screen_" | wc -l)"\033[0K\r"
    while [[ $limit_simultaneous_processes -le $(screen -ls | grep "almacosmos_${RandomUid}_screen_" | wc -l) ]]; do
        sleep $sleep_time_per_loop
        echo -ne "Counting screen task "$(screen -ls | grep "almacosmos_${RandomUid}_screen_" | wc -l)", current time "$(date +"%Y-%m-%d %H:%M:%S %Z")"\033[0K\r"
    done
    echo ""
    RunScreen="almacosmos_${RandomUid}_screen_$(date +%Y%m%d_%Hh%Mm%Ss%N)_$i"
    echo "Adding screen task \"$RunScreen\" with command \"$RunCommand 2>&1 | tee log_$RunScreen.txt\""
    screen -d -S "$RunScreen" -m bash -c "$RunCommand 2>&1 | tee log_$RunScreen.txt"
    echo "Current time "$(date +"%Y-%m-%d %H:%M:%S %Z")", sleeping for 3s"
    echo ""
    sleep 3
done










