#!/bin/bash
# 


# 
# Check input argument
# 
if [[ $# -lt 2 ]]; then
    echo "Usage: "
    echo "    a3cosmos-ALMA-image-print-png input_fits_directory [output_directory]"
    echo "Input: "
    echo "    A directory containing the A3COSMOS fits images."
    echo "    For example, a \"fits/\" directory which contains:"
    echo "    \"*_SB*_GB*_MB*.spw*.cont.I.image.fits\""
    echo "Output: "
    echo "    Output png images to \"output_directory\"."
    echo ""
    exit
fi


# 
# Check supermongo and necessary files
# 
if [[ $(type ds9 2>/dev/null | wc -l) -eq 0 ]]; then
    echo "Error! ds9 was not installed!"
    exit 1
fi
#if [[ $(type xy2sky 2>/dev/null | wc -l) -eq 0 ]]; then
#    echo "Error! wcstools was not installed!"
#    exit 1
#fi
#if [[ $(type gethead 2>/dev/null | wc -l) -eq 0 ]]; then
#    echo "Error! wcstools was not installed!"
#    exit 1
#fi
#if [[ $(type sm 2>/dev/null | wc -l) -eq 0 ]]; then
#    echo "Error! Supermongo was not installed!"
#    exit 1
#fi
#if [[ $(echo "load astroSfig.sm" | sm 2>&1 | wc -l) -ne 0 ]]; then
#    echo "Error! Necessary Supermongo macros was not installed! Please download \"https://github.com/1054/DeepFields.SuperDeblending/Softwares/Supermongo_macro/*\" or contact liudz1054@gmail.com!"
#    exit 1
#fi
#if [[ ! -d $(dirname "${BASH_SOURCE[0]}")/a3cosmos-MC-simulation-statistics-analysis-tools ]]; then
#    echo "Error! \""$(dirname "${BASH_SOURCE[0]}")/a3cosmos-MC-simulation-statistics-analysis-tools"\" was not found! Please make sure you have completely downloaded \"https://github.com/1054/AlmaCosmos.git\"!"
#    exit 1
#fi


# 
# Read Input cat
# 
DataDir=("$1")


# 
# Set Output dir
# 
OutputDir="$2"
if [[ ! -d "$OutputDir" ]]; then
    mkdir -p "$OutputDir"
fi


# 
# Set locale for fixing python localename problem
# 
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8


# 
# Software dependency
# 
if [[ $(type almacosmos_get_fits_image_pixel_histogram.py 2>/dev/null | wc -l) -eq 0 ]]; then
    if [[ -f "$(dirname $(dirname ${BASH_SOURCE[0]}))/Softwares/SETUP.bash" ]]; then
        source "$(dirname $(dirname ${BASH_SOURCE[0]}))/Softwares/SETUP.bash"
    else
        echo "Error! \"almacosmos_get_fits_image_pixel_histogram.py\" was not found in \$PATH!"
        exit
    fi
fi


# 
# Prepare output array
# 
Source_names=()
Image_rms=()


# 
# Loop 
# 
Has_print_head=0
for (( j=0; j<${#DataDir[@]}; j++ )); do

    #Image_input=($(ls -1 "${DataDir[j]}"/*.dirty-image.fits))
    Image_input=($(ls -1 "${DataDir[j]}"/*_SB*_GB*_MB*.spw*.cont.I.image.fits))
    
    for (( i=0; i<${#Image_input[@]}; i++ )); do
        #echo "${Image_input[i]}"
        #CrabPhotImageStatistics "${Image_input[i]}"
        # 
        #<DEBUG># if [[ "${Image_input[i]}" == *"/2011."* || "${Image_input[i]}" == *"/2012."*  ]]; then continue; fi
        # 
        if [[ ! -f "${Image_input[i]}.pixel.statistics.txt" ]]; then
            almacosmos_get_fits_image_pixel_histogram.py "${Image_input[i]}"
        fi
        # 
        if [[ -f "${Image_input[i]}.pixel.statistics.txt" ]]; then
            #echo ""
            Image_name=$(basename "${Image_input[i]}" | sed -e 's/.fits$//g')
            Temp_rms=$(cat "${Image_input[i]}.pixel.statistics.txt" | grep "Gaussian_sigma *=" | perl -p -e 's/Gaussian_sigma *= *([0-9.+-eE]*)/\1/g') # Jy/beam
            if [[ x"$Temp_rms" == x ]]; then echo ""; echo "Failed to read Gaussian_sigma from \"${Image_input[i]}.pixel.statistics.txt\""; exit 1; fi
            # 
            scale_limits=($(awk "BEGIN {print (-2.0*($Temp_rms));}") $(awk "BEGIN {print (5.0*($Temp_rms));}"))
            # 
            echo ds9 -title "ds_${i}" "${Image_input[i]}" -scale limits ${scale_limits[0]} ${scale_limits[1]} -saveimage "$OutputDir/$Image_name.grey.png" -quit
                 ds9 -title "ds_${i}" "${Image_input[i]}" -scale limits ${scale_limits[0]} ${scale_limits[1]} -saveimage "$OutputDir/$Image_name.grey.png" -quit
            echo ds9 -title "ds_${i}" "${Image_input[i]}" -scale limits ${scale_limits[0]} ${scale_limits[1]} -cmap aips0 -saveimage "$OutputDir/$Image_name.aips0.png" -quit
                 ds9 -title "ds_${i}" "${Image_input[i]}" -scale limits ${scale_limits[0]} ${scale_limits[1]} -cmap aips0 -saveimage "$OutputDir/$Image_name.aips0.png" -quit
            # 
        else
            echo ""
            echo "Error! Could not find \"${Image_input[i]}.pixel.statistics.txt\"!"
            exit 1
        fi
        break
    done
    break
done

echo ""
#echo "Done!"

